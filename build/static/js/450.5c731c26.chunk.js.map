{"version":3,"file":"static/js/450.5c731c26.chunk.js","mappings":"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","sources":["Utils/getMovies.js","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["const KEY = 'e03e8200fca9ca2526039890b7d17954';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\r\nconst TRANDING_URL = 'https://api.themoviedb.org/3/trending/all/day?';\r\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie?';\r\nexport async function getCredits (id) {\r\n    return await fetch(\r\n        `${BASE_URL}${id}/credits?api_key=${KEY}&language=en-US`\r\n        )\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error(response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .catch(error => console.log(error));\r\n};\r\n\r\n\r\nexport async function getDetails(id) {\r\n    return await fetch(\r\n    `${BASE_URL}${id}?api_key=${KEY}&language=en-US`\r\n    )\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n}\r\n\r\nexport async function getReviewsFromServer(id) {\r\nreturn await fetch(\r\n    `${BASE_URL}${id}/reviews?api_key=${KEY}&language=en-US`\r\n    )\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n}\r\n\r\n export async function getTrending (query) {\r\n    return await fetch(\r\n    `${TRANDING_URL}api_key=${KEY}`\r\n    )\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n}\r\n\r\n export async function searchMovies (query) {\r\n    return await fetch(\r\n    `${SEARCH_URL}api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\r\n    )\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch(error => console.log(error));\r\n}","import { useEffect,useState } from \"react\";\nimport { useParams  } from \"react-router-dom\";\nimport {getCredits} from '../../Utils/getMovies';\n\nconst Cast = () => {\nconst[cast,setCast] = useState([])\nconst params=useParams()\n   const id = params.movieId\n    useEffect(()=>{\n        getCredits(id).then(data => setCast(data.cast))\n    },[id])\n    return (<ul>{cast.map(item=>{\n        return <li key={item.id}>\n            <img src={`https://image.tmdb.org/t/p/w400/${item.profile_path}`} alt={item.name}/>\n            <p>{item.name}</p>\n            <p>{item.character}</p>\n        </li>\n    })}</ul> );\n}\n \nexport default Cast;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {getReviewsFromServer} from \"../../Utils/getMovies\";\nconst Reviews = () => {\n  const [reviews, getReviews] = useState([]);\n  const params = useParams();\n  const id = params.movieId;\n\n  useEffect(() => {\n    getReviewsFromServer(id).then((data) => getReviews(data.results));\n  }, [id]);\n  return (\n    reviews.length?<ul>\n      {reviews?.map((item) => {\n        return (\n          <li key={item.id}>\n            <h2>{item.author}</h2>\n            <p>{item.content}</p>\n          </li>\n        );\n      })}\n    </ul>: <h2>{'We dont have any reviews for this movie.'}</h2>\n  );\n};\n\nexport default Reviews;\n","import { Link, Route, Switch, useParams, useLocation, useHistory} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {getDetails} from \"../Utils/getMovies\";\nimport Cast from \"../components/Cast/Cast\";\nimport Reviews from \"../components/Reviews/Reviews\";\n\nconst MovieDetailsPage = () => {\n  const [data, setData] = useState(\"\");\n    const params =useParams()\n    const  history = useHistory()\n    const id = params.movieId;\n  useEffect(() => {\n    getDetails(id).then((data) => setData(data));\n  }, [id]);\n  \n  const imgUrl = `https://image.tmdb.org/t/p/w400/${data.poster_path}`;\n  const genre = data.genres\n  const location = useLocation();\n  const onClickBack = ()=>{\n    history.push(location.state.location)\n  }\n  return (\n    <>\n   <button onClick={onClickBack}>{'Go back'}</button>\n   <div className=\"details-div\">\n   <img src={imgUrl} alt=\"\" />\n   <div>\n      <h2>{data.title}</h2>\n      <p>{data.release_date}</p>\n      <p>{data.vote_average}%</p>\n      <p>{data.overview}</p>\n      <ul>{genre?.map(item=> <li key={item.id}>{item.name}</li>)}</ul> \n   </div>\n   </div>\n      <Link to={ { pathname:`/movies/${id}/cast`, state:{location : location.state.location}}}>Cast</Link>\n      <Link to={{pathname:`/movies/${id}/reviews`,state:{location : location.state.location}}}>Reviews</Link>\n      <Switch>\n      <Route path=\"/movies/:movieId/cast\" component={Cast} />\n      <Route path=\"/movies/:movieId/reviews\" component={Reviews} />\n      </Switch>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["KEY","BASE_URL","TRANDING_URL","SEARCH_URL","getCredits","id","fetch","then","response","ok","Error","status","json","catch","error","console","log","getDetails","getReviewsFromServer","getTrending","query","searchMovies","useState","cast","setCast","useParams","movieId","useEffect","data","map","item","src","profile_path","alt","name","character","reviews","getReviews","results","length","author","content","setData","params","history","useHistory","imgUrl","poster_path","genre","genres","location","useLocation","onClick","push","state","className","title","release_date","vote_average","overview","to","pathname","path","component","Cast","Reviews"],"sourceRoot":""}